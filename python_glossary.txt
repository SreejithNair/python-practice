Full can be found here ( remember to select the version of python): https://docs.python.org/3.7/glossary.html

Hashable:

An object is hashable if it has a hash value which never changes during its lifetime (it needs a __hash__() 
method), and can be compared to other objects (it needs an __eq__() method).

Hashable objects which compare equal must have the same hash value to return True.

Hashability makes an object usable as a dictionary key and a set member, because these data structures
use the hash value internally.

Most of Pythonâ€™s immutable built-in objects are hashable; 
> mutable containers (such as lists or dictionaries) are not; 
> immutable containers (such as tuples and frozensets) are only hashable 
  if their elements are hashable.
> Objects which are instances of user-defined classes are hashable by default.
They all compare unequal (except with themselves), and their hash value is derived from their id()..